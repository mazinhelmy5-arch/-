import React, { useState } from 'react';
import { RotateCcw, Sun, Moon } from 'lucide-react';

export default function TasbihApp() {
  const [count, setCount] = useState(0);
  const [totalCount, setTotalCount] = useState(0);
  const [activeTab, setActiveTab] = useState('tasbih'); // tasbih, morning, evening

  const dhikrList = [
    'سُبْحَانَ اللهِ',
    'الْحَمْدُ للهِ',
    'اللهُ أَكْبَرُ',
    'لَا إِلَهَ إِلَّا اللهُ',
    'سُبْحَانَ اللهِ وَبِحَمْدِهِ',
    'أَسْتَغْفِرُ اللهَ'
  ];

  const morningAdhkar = [
    { text: 'أَصْبَحْنَا وَأَصْبَحَ الْمُلْكُ لِلَّهِ', count: 1 },
    { text: 'اللَّهُمَّ بِكَ أَصْبَحْنَا وَبِكَ أَمْسَيْنَا', count: 1 },
    { text: 'أَصْبَحْنَا عَلَى فِطْرَةِ الْإِسْلَامِ', count: 1 },
    { text: 'سُبْحَانَ اللَّهِ وَبِحَمْدِهِ', count: 100 },
    { text: 'لَا إِلَهَ إِلَّا اللَّهُ وَحْدَهُ لَا شَرِيكَ لَهُ', count: 10 },
    { text: 'أَسْتَغْفِرُ اللَّهَ وَأَتُوبُ إِلَيْهِ', count: 100 },
    { text: 'اللَّهُمَّ إِنِّي أَصْبَحْتُ أُشْهِدُكَ', count: 1 },
    { text: 'رَضِيتُ بِاللَّهِ رَبًّا وَبِالْإِسْلَامِ دِينًا', count: 3 },
    { text: 'يَا حَيُّ يَا قَيُّومُ بِرَحْمَتِكَ أَسْتَغِيثُ', count: 3 },
    { text: 'اللَّهُمَّ عَافِنِي فِي بَدَنِي', count: 3 }
  ];

  const eveningAdhkar = [
    { text: 'أَمْسَيْنَا وَأَمْسَى الْمُلْكُ لِلَّهِ', count: 1 },
    { text: 'اللَّهُمَّ بِكَ أَمْسَيْنَا وَبِكَ أَصْبَحْنَا', count: 1 },
    { text: 'أَمْسَيْنَا عَلَى فِطْرَةِ الْإِسْلَامِ', count: 1 },
    { text: 'سُبْحَانَ اللَّهِ وَبِحَمْدِهِ', count: 100 },
    { text: 'لَا إِلَهَ إِلَّا اللَّهُ وَحْدَهُ لَا شَرِيكَ لَهُ', count: 10 },
    { text: 'أَسْتَغْفِرُ اللَّهَ وَأَتُوبُ إِلَيْهِ', count: 100 },
    { text: 'اللَّهُمَّ إِنِّي أَمْسَيْتُ أُشْهِدُكَ', count: 1 },
    { text: 'رَضِيتُ بِاللَّهِ رَبًّا وَبِالْإِسْلَامِ دِينًا', count: 3 },
    { text: 'يَا حَيُّ يَا قَيُّومُ بِرَحْمَتِكَ أَسْتَغِيثُ', count: 3 },
    { text: 'اللَّهُمَّ عَافِنِي فِي بَدَنِي', count: 3 }
  ];

  const [selectedDhikr, setSelectedDhikr] = useState(dhikrList[0]);
  const [adhkarProgress, setAdhkarProgress] = useState({});

  const increment = () => {
    setCount(count + 1);
    setTotalCount(totalCount + 1);
  };

  const reset = () => {
    setCount(0);
  };

  const resetAll = () => {
    setCount(0);
    setTotalCount(0);
  };

  const incrementAdhkar = (index, maxCount) => {
    const key = ${activeTab}-${index};
    const current = adhkarProgress[key] || 0;
    if (current < maxCount) {
      setAdhkarProgress({ ...adhkarProgress, [key]: current + 1 });
      setTotalCount(totalCount + 1);
    }
  };

  const resetAdhkar = (index) => {
    const key = ${activeTab}-${index};
    setAdhkarProgress({ ...adhkarProgress, [key]: 0 });
  };

  const resetAllAdhkar = () => {
    const newProgress = {};
    const currentList = activeTab === 'morning' ? morningAdhkar : eveningAdhkar;
    currentList.forEach((_, index) => {
      newProgress[${activeTab}-${index}] = 0;
    });
    setAdhkarProgress({ ...adhkarProgress, ...newProgress });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-emerald-900 via-teal-800 to-cyan-900 flex items-center justify-center p-4">
      <div className="bg-white/95 backdrop-blur-sm rounded-3xl shadow-2xl p-6 max-w-md w-full max-h-[90vh] overflow-hidden flex flex-col">
        <div className="text-center mb-6">
          <h1 className="text-3xl font-bold text-teal-800 mb-2">برنامج التسبيح</h1>
          <p className="text-gray-600">اذكر الله دائماً</p>
        </div>

        {/* Tabs */}
        <div className="flex gap-2 mb-6">
          <button
            onClick={() => setActiveTab('tasbih')}
            className={`flex-1 py-3 rounded-xl font-semibold transition-all ${
              activeTab === 'tasbih'
                ? 'bg-teal-600 text-white shadow-lg'
                : 'bg-gray-200 text-gray-600 hover:bg-gray-300'
            }`}
          >
            تسبيح
          </button>
          <button
            onClick={() => setActiveTab('morning')}
            className={`flex-1 py-3 rounded-xl font-semibold transition-all flex items-center justify-center gap-2 ${
              activeTab === 'morning'
                ? 'bg-amber-500 text-white shadow-lg'
                : 'bg-gray-200 text-gray-600 hover:bg-gray-300'
            }`}
          >
            <Sun size={18} />
            الصباح
          </button>
          <button
            onClick={() => setActiveTab('evening')}
            className={`flex-1 py-3 rounded-xl font-semibold transition-all flex items-center justify-center gap-2 ${
              activeTab === 'evening'
                ? 'bg-indigo-600 text-white shadow-lg'
                : 'bg-gray-200 text-gray-600 hover:bg-gray-300'
            }`}
          >
            <Moon size={18} />
            المساء
          </button>
        </div>

        <div className="flex-1 overflow-y-auto">
          {activeTab === 'tasbih' && (
            <div>
              <div className="mb-6">
                <label className="block text-gray-700 font-semibold mb-3 text-right">اختر الذكر:</label>
                <select 
                  value={selectedDhikr}
                  onChange={(e) => setSelectedDhikr(e.target.value)}
                  className="w-full p-3 border-2 border-teal-300 rounded-xl text-right text-lg focus:outline-none focus:border-teal-500 bg-teal-50"
                >
                  {dhikrList.map((dhikr, index) => (
                    <option key={index} value={dhikr}>{dhikr}</option>
                  ))}
                </select>
              </div>

              <div className="bg-gradient-to-r from-teal-100 to-emerald-100 rounded-2xl p-6 mb-6 text-center">
                <p className="text-4xl font-bold text-teal-800 mb-4 leading-relaxed">{selectedDhikr}</p>
              </div>

              <div className="bg-teal-50 rounded-xl p-6 mb-6 text-center">
                <p className="text-gray-600 mb-2">العدد الحالي</p>
                <p className="text-6xl font-bold text-teal-700">{count}</p>
              </div>

              <button
                onClick={increment}
                className="w-full bg-gradient-to-r from-teal-600 to-emerald-600 hover:from-teal-700 hover:to-emerald-700 text-white font-bold py-6 rounded-xl text-2xl mb-4 shadow-lg transform active:scale-95 transition-all"
              >
                سَبِّح
              </button>

              <div className="grid grid-cols-2 gap-3">
                <button
                  onClick={reset}
                  className="bg-orange-500 hover:bg-orange-600 text-white font-semibold py-3 rounded-xl shadow transition-all flex items-center justify-center gap-2"
                >
                  <RotateCcw size={18} />
                  إعادة العدد
                </button>
                <button
                  onClick={resetAll}
                  className="bg-red-500 hover:bg-red-600 text-white font-semibold py-3 rounded-xl shadow transition-all"
                >
                  مسح الكل
                </button>
              </div>
            </div>
          )}

          {(activeTab === 'morning' || activeTab === 'evening') && (
            <div>
              <div className="mb-4 flex justify-end">
                <button
                  onClick={resetAllAdhkar}
                  className="bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded-lg text-sm shadow transition-all"
                >
                  إعادة تعيين الكل
                </button>
              </div>
              
              <div className="space-y-3">
                {(activeTab === 'morning' ? morningAdhkar : eveningAdhkar).map((adhkar, index) => {
                  const key = ${activeTab}-${index};
                  const current = adhkarProgress[key] || 0;
                  const isComplete = current >= adhkar.count;

                  return (
                    <div
                      key={index}
                      className={`border-2 rounded-xl p-4 transition-all ${
                        isComplete
                          ? 'bg-green-50 border-green-400'
                          : 'bg-white border-gray-200'
                      }`}
                    >
                      <p className="text-right text-lg font-semibold text-gray-800 mb-3 leading-relaxed">
                        {adhkar.text}
                      </p>
                      <div className="flex items-center justify-between gap-3">
                        <button
                          onClick={() => resetAdhkar(index)}
                          className="bg-gray-300 hover:bg-gray-400 text-gray-700 p-2 rounded-lg transition-all"
                        >
                          <RotateCcw size={16} />
                        </button>
                        <div className="flex-1 text-center">
                          <span className={text-2xl font-bold ${isComplete ? 'text-green-600' : 'text-teal-600'}}>
                            {current} / {adhkar.count}
                          </span>
                        </div>
                        <button
                          onClick={() => incrementAdhkar(index, adhkar.count)}
                          disabled={isComplete}
                          className={`px-6 py-2 rounded-lg font-semibold transition-all ${
                            isComplete
                              ? 'bg-green-500 text-white cursor-not-allowed'
                              : 'bg-teal-500 hover:bg-teal-600 text-white active:scale-95'
                          }`}
                        >
                          {isComplete ? '✓ تم' : 'ذكر'}
                        </button>
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          )}
        </div>

        <div className="text-center pt-4 mt-4 border-t-2 border-gray-200">
          <p className="text-gray-600 text-sm">إجمالي التسبيحات اليوم</p>
          <p className="text-2xl font-bold text-teal-700">{totalCount}</p>
        </div>
      </div>
    </div>
  );
}
